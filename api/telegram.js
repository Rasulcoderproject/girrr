const fetch = require("node-fetch");

const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

const sessions = {};

async function askGPT(prompt) {
  const res = await fetch("https://api.openai.com/v1/chat/completions", {
    method: "POST",
    headers: {
      Authorization: `Bearer ${OPENAI_API_KEY}`,
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: prompt }],
      temperature: 0.7
    })
  });
  const data = await res.json();
  return data.choices?.[0]?.message?.content || "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.";
}

module.exports = async (req, res) => {
  if (req.method !== "POST") return res.status(405).send("Only POST allowed");

  const body = req.body;
  const msg = body.message;
  const chat_id = msg?.chat?.id;
  const text = msg?.text;

  const sendMessage = (text, keyboard) =>
    fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id, text, reply_markup: keyboard })
    });

  const session = sessions[chat_id] || {};

  if (text === "/start") {
    sessions[chat_id] = {};
    await sendMessage("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∞:", {
      keyboard: [["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ò—Å—Ç–æ—Ä–∏—è"], ["–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"]],
      resize_keyboard: true,
      one_time_keyboard: true
    });
    return res.end("OK");
  }

  if (["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ò—Å—Ç–æ—Ä–∏—è", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"].includes(text)) {
    sessions[chat_id] = { theme: text };
    const prompt = `–°–æ–∑–¥–∞–π 1 –≤–æ–ø—Ä–æ—Å —Å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–æ —Ç–µ–º–µ "${text}", —É–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.`;
    const gptResponse = await askGPT(prompt);
    sessions[chat_id].question = gptResponse;
    await sendMessage(`üìö –í–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–º–µ *${text}*:\n\n${gptResponse}`, {
      remove_keyboard: true
    });
    return res.end("OK");
  }

  // –ü–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–≤–µ—Ç–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é ‚Äî –ø–æ–∑–∂–µ

  await sendMessage("–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.");
  return res.end("OK");
};
